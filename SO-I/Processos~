Conceitos:{
	-Um sistema operacional executa uma variedade de programas ou tarefas de usu√°rios.
	-Process: Representa√ß√£o de programas ou tarefas em execu√ß√£o pelo SO(De forma simples: Um programa em execu√ß√£o)
	-SOs modernos permitem a execu√ß√£o CONCORRENTE de v√°rios processos(processos compartilham o tempo da CPU)
	-A principal tarefa do SO √© ESCALONAR(definir o momento em que cada processo √© executado na linha do tempo) a execu√ß√£o de v√°rios processos para uma ou poucas CPUs.
}

--------------------------------------------------------------------------------
Estados de um Processo:{

	-Para organizar a execu√ß√£o de varios processos, o SO controla o estado deste conforme sua execu√ß√£o.
	-Cada processo pode estar em um dos seguintes estados:{
		-novo: O processo est√° sendo criado.
		-executando: O processo est√° aesperando a ocorr√™ncia de algum evento(ex:I/O)//esperando algo para ELE utilizar.
		-pronto: O processo est√° esperando para ser atribu√≠do a algum processador.//est√° esperando a vez dele de executar.Esperando a batata chegar na m√£o dele.
		-terminado: O processo terminou sua execu√ß√£o.
		//ver ilustra√ß√£o de processos no slide do dia 22/09/21
	}
}

--------------------------------------------------------------------------------
Bloco de Controle de Processo(PCB/Process Control Block):{
	//O sistema operacional salva informa√ß√µes dos processos.
	//O PCB √© um registro que o sistema operacional faz para cada processo, cada um tem um PCB, como uma ficha de um paciente no hospital.

	-Representa√ß√£o de um processo no sistema. Um PCB mant√©m muitas informa√ß√µes associadas a um processo:{
		-Estado do processo(ex:novo, executando, etc.)
		-Contador do programa(end da pr√≥xima instru√ß√£o)//quando um processo for interrompido, ele pode voltar a executar de onde parou.
		-Registradores da CPU(armazena o conte√∫do dos registradores quando o processo for interrompido)
		-Informa√ß√µes de escalonamento de processo(ex: prioridade, ponteiros de filas de escalonamento)
		-Informa√ß√µes de gerenciamento de mem√≥ria.
		-Informa√ß√µes de contabiliza√ß√£o(quando, onde).
		-Informa√ß√µes de status de I/O(ex: lista de dispositivos de I/O alocados)
	}
}

--------------------------------------------------------------------------------
Escalonamento de Processos:{
	-O objetivo da multiprograma√ß√£o √© ter processos em execu√ß√£o o tempo todo(maximizar a utiliza√ß√£o da CPU)
	-Em um sistema com um processador:{
		-Nunca haver√° mas de um processo em execu√ß√£o.
		-Se houver mais processos, os demais ter√£o que esperar at√© que a CPU seja liberada e possa ser reescalonada.
	}
	-Para compartilhar a CPU, √© desej√°vel alternar entre processos de forma frequente(Para que os usu√°rios possam interagir com cada programa durante sua execu√ß√£o)
}

--------------------------------------------------------------------------------
Escalonamento de Processos:{
	-Caracter√≠stica de um processo:Ciclo de surtos de CPU e I/O{
		-Propriedade observada nos processos: a execu√ß√£o de um processo consiste de um ciclo de execu√ßao na CPU e espera de I/O, alternando entre esses dois estados.
		-Esperas nos processos oportunizam a utiliza√ß√£o da CPU para execu√ß√£o de outros processos prontos!//enquanto um processos faz I/O, o SO executa partes de outros processos enquanto a CPU est√° dispon√≠vel.
	}
}

--------------------------------------------------------------------------------
Principais Componentes:{
	-Filas de escalonamento:{
		-Fun√ß√£o: Organizar os v√°rios processos em execu√ß√£o.
		-Tipos:{
			-Fila de processos pronto: conjuntos de todos os processos residentes em mem√≥ria principal, prontos e esperando serem executados pela CPU.
			-Fila de dispositivo ou fila de espera: conjunto de processos esperando para acessar um dispositivo. Cda dispositivo tem sua pr√≥pria fila.
		}
	}
	-Escalonador(Scheduler):Seleciona processos prontos para a execu√ß√£o na CPU
	-Executor(Dispatcher): D√° controle da CPU ao processo selecionado pelo escalonador.	
}
---------------------------------------------------------------------------------
Ciclo de Vida de Processos:{
	-Um processo novo inicailmente È colocado na fila de processos prontos. ELe espera na fila atÈ ser selecionado para execuÁ„o pelo ESCALONADOR.//mas quem realmente executa o processo È o EXECUTOR(DISPATCHER)
	-Depois que o processo est· em execuÁ„o, um dos eventos abaixo pode ocorrer:{
		-O processo pode emitir um pedido de I/O e ser colocado na fila de I/O.
		-O processo pode ser removido ‡ forÁa da CPU, como resultado de uma interrupÁ„o ou porque seu tempo expirou.
		-O processo pode criar um subprocesso e esperar seu tÈrmino.
	}
	-Um processo continua seu ciclo atÈ terminar, assim, È removido de todas as filas, seu PCB e recursos s„o desalocados.
}
